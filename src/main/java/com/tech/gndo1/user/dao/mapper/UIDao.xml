<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.gndo1.user.dao.UIDao">
	<!-- 소비자 아이디 찾기 -->
	<select id="find_memid" resultType="String">
		SELECT MEM_ID FROM MEMBERS WHERE (MEM_NAME = #{param1} AND MEM_EMAIL = #{param2})
	</select>
	<!-- 사업자 아이디 찾기 -->
	<select id="find_cpyid" resultType="String">
		SELECT CPY_ID FROM COMPANY WHERE (CPY_NAME = #{param1} AND CPY_EMAIL = #{param2})
	</select>
	<!-- 소비자 비밀번호 찾기 -->
	<!-- 소비자 아이디 이메일주소 일치검사 -->
	<select id="m_Existent" resultType="Integer">
		SELECT COUNT(MEM_NUM) COUNT FROM MEMBERS WHERE (MEM_ID = #{param1} AND MEM_EMAIL = #{param2})
	</select>
	<!-- 소비자 비밀번호 난수로 변경 -->
	<update id="mpChange">
		UPDATE MEMBERS 
		SET MEM_PWD = #{param1}, MEM_LOGKEY = #{param2} 
		WHERE MEM_ID = #{param3} AND MEM_EMAIL = #{param4}
	</update>
	<!-- 사업자 비밀번호 찾기 -->
	<!-- 사업자 아이디 이메일주소 일치검사 -->
	<select id="c_Existent" resultType="Integer">
		SELECT COUNT(CPY_NUM) COUNT FROM COMPANY WHERE (CPY_ID = #{param1} AND CPY_EMAIL = #{param2})
	</select>
	<!-- 사업자 비밀번호 난수로 변경 -->
	<update id="cpChange">
		UPDATE COMPANY 
		SET CPY_PWD = #{param1}, CPY_LOGKEY = #{param2} 
		WHERE CPY_ID = #{param3} AND CPY_EMAIL = #{param4}
	</update>
	
	<!-- 이메일 중복검사 -->
	<select id="check_memail" resultType="Integer">
	SELECT COUNT(MEM_EMAIL) COUNT FROM MEMBERS WHERE MEM_EMAIL=#{param1}
	</select>
	<select id="check_cpmail" resultType="Integer">
	SELECT COUNT(CPY_EMAIL) COUNT FROM COMPANY WHERE CPY_EMAIL=#{param1}
	</select>
	<!-- 소비자 닉네임 중복검사 -->
	<select id="check_nk" resultType="Integer">
		SELECT COUNT(MEM_NICKNAME) COUNT FROM MEMBERS WHERE MEM_NICKNAME=#{param1}
	</select>
	<!--중복검사, 로그인유효성 검사(id)-->
	<select id="check_mem" resultType="Integer">
		SELECT COUNT(MEM_ID) COUNT FROM MEMBERS WHERE MEM_ID=#{param1}
	</select>
	<select id="check_cpy" resultType="Integer">
		SELECT COUNT(CPY_ID) COUNT FROM COMPANY WHERE CPY_ID=#{param1}
	</select>
	<!-- 사업자등록번호 중복검사 -->
	<select id="check_cpyNum" resultType="Integer">
		SELECT COUNT(CPY_CPNUM) COUNT FROM COMPANY WHERE CPY_CPNUM=#{param1}
	</select>
	<!--로그인 유효성 검사(pwd)-->
	<select id="login_checkmpwd" resultType="com.tech.gndo1.mb.dto.MembersDto">
		SELECT MEM_PWD, MEM_LOGKEY FROM MEMBERS WHERE MEM_ID=#{param1}
	</select>
	<select id="login_checkcpwd" resultType="com.tech.gndo1.cp.dto.CompanyDto">
		SELECT CPY_PWD, CPY_LOGKEY FROM COMPANY WHERE CPY_ID=#{param1}
	</select>
	<!--로그인 시 회원정보 불러오기-->
	<select id="members" resultType="com.tech.gndo1.mb.dto.MembersDto">
		SELECT * FROM MEMBERS WHERE MEM_ID=#{param1}	
	</select>
	<select id="company" resultType="com.tech.gndo1.cp.dto.CompanyDto">
		SELECT * FROM COMPANY WHERE CPY_ID=#{param1}	
	</select>
	<!-- 회원가입  -->
	<insert id="insertCompany">
      INSERT INTO COMPANY VALUES(COMPANY_SEQ.NEXTVAL,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},#{param8},SYSDATE,#{param9})
   </insert>
   <insert id="insertMembers">
      INSERT INTO MEMBERS VALUES(MEMBERS_SEQ.NEXTVAL,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},#{param8},#{param9},SYSDATE,#{param10})
   </insert>
   <select id="acccnt" resultType="Integer">
		SELECT COUNT(ACC_NUM) FROM ACCOMMODATION_INFO WHERE CPY_NUM=#{param1}
	</select>
	<select id="accsel" resultType="Integer">
		SELECT ACC_NUM FROM ACCOMMODATION_INFO WHERE CPY_NUM=#{param1}
	</select>
	
	<!-- mbPage 비밀번호 추출 -->
	<select id="myPage_mem" resultType="com.tech.gndo1.mb.dto.MembersDto">
		SELECT MEM_PWD, MEM_LOGKEY FROM MEMBERS WHERE MEM_NUM=#{param1}
	</select>
	<!-- mbModify 비밀번호 수정 중 현재 비밀번호 회피 -->
	<select id="mpwddpCheck" resultType="com.tech.gndo1.mb.dto.MembersDto">
		SELECT MEM_PWD, MEM_LOGKEY FROM MEMBERS WHERE MEM_NUM=#{param1}
	</select>
	<!-- mbModify 팝업창에서 비밀번호 수정 -->
	<update id="modifyPass">
		UPDATE MEMBERS
		SET MEM_PWD = #{param1}, MEM_LOGKEY = #{param2} 
		WHERE MEM_NUM = #{param3}
	</update>
	<!-- mbModify 팝업창에서 전화번호 수정 -->
	<update id="modifyTel">
		UPDATE MEMBERS
		SET MEM_PHONENUM = #{param1} 
		WHERE MEM_NUM = #{param2}
	</update>
	<!-- mbModify 팝업창에서 회원탈퇴 -->
	<delete id="womem">
		DELETE FROM MEMBERS 
		WHERE MEM_NUM = #{param1}
	</delete>
	
	<!-- cpPage 비밀번호 추출 -->
	<select id="myPage_cpy" resultType="com.tech.gndo1.cp.dto.CompanyDto">
		SELECT CPY_PWD, CPY_LOGKEY FROM COMPANY WHERE CPY_NUM=#{param1}
	</select>
	<!-- cpModify 비밀번호 수정 중 현재 비밀번호 회피 -->
	<select id="cpwddpCheck" resultType="com.tech.gndo1.cp.dto.CompanyDto">
		SELECT CPY_PWD, CPY_LOGKEY FROM COMPANY WHERE CPY_NUM=#{param1}
	</select>
	<!-- cpModify 팝업창에서 비밀번호 수정 -->
	<update id="cpmodifyPass">
		UPDATE COMPANY
		SET CPY_PWD = #{param1}, CPY_LOGKEY = #{param2} 
		WHERE CPY_NUM = #{param3}
	</update>
	<!-- cpModify 팝업창에서 전화번호 수정 -->
	<update id="cpmodifyTel">
		UPDATE COMPANY
		SET CPY_TEL = #{param1} 
		WHERE CPY_NUM = #{param2}
	</update>
	<!-- mbModify 팝업창에서 회원탈퇴 -->
	<delete id="wocpy">
		DELETE FROM COMPANY 
		WHERE CPY_NUM = #{param1}
	</delete>
	
	
	<resultMap type="com.tech.gndo1.review.dto.Review_imgDto" id="review_img">
		<result property="rvi_num" column="RVI_NUM"/>
		<result property="rv_num" column="RV_NUM"/>
		<result property="rvi_img" column="RVI_IMG"/>
		<result property="rvi_afterimg" column="RVI_AFTERIMG"/>
	</resultMap>
	
	<resultMap type="com.tech.gndo1.cptype.dto.Accommodation_infoDto" id="accommodation_info">
		<result property="acc_num" column="ACC_NUM"/>
		<result property="cpy_num" column="CPY_NUM"/>
		<result property="acc_location" column="ACC_LOCATION"/>
		<result property="acc_map" column="ACC_MAP"/>
		<result property="acc_la" column="ACC_LA"/>
		<result property="acc_lo" column="ACC_LO"/>
		<result property="acc_tel" column="ACC_TEL"/>
		<result property="acc_info" column="ACC_INFO"/>
		<result property="acc_serkeyword" column="ACC_SERKEYWORD"/>
		<result property="acc_name" column="ACC_NAME"/>
		<result property="acc_detailmap" column="ACC_DETAILMAP"/>
	</resultMap>



	<resultMap type="com.tech.gndo1.roomtype.dto.RoomTypeDto" id="roomtype">
		<result property="rt_num" column="RT_NUM"/>
		<result property="acc_num" column="ACC_NUM"/>
		<result property="rt_rmname" column="RT_RMNAME" />
		<result property="rt_rmcount" column="RT_RMCOUNT"/>
		<result property="rt_rpeople" column="RT_RPEOPLE"/>
		<result property="rt_price" column="RT_PRICE"/>
		<result property="rt_info" column="RT_INFO"/>
		<result property="rt_in" column="RT_IN"/>
		<result property="rt_out" column="RT_OUT"/>
	</resultMap>
	
	<resultMap type="com.tech.gndo1.payment.dto.PaymentDto" id="payment">
		<result property="pm_num" column="PM_NUM"/>
		<result property="rs_num" column="RS_NUM"/>
		<result property="pm_date" column="PM_DATE"/>
		<result property="pm_type" column="PM_TYPE"/>
	</resultMap>
	
	<resultMap type="com.tech.gndo1.review.dto.ReviewDto" id="review">
		<result property="rv_num" column="RV_NUM"/>
		<result property="mem_num" column="MEM_NUM"/>
		<result property="rt_num" column="RT_NUM"/>
		<result property="rv_date" column="RV_DATE"/>
		<result property="rv_title" column="RV_TITLE"/>
		<result property="rv_content" column="RV_CONTENT"/>
		<result property="rv_grade" column="RV_GRADE"/>
		<collection property="acc" resultMap="accommodation_info"/>
		<collection property="rvi" resultMap="review_img"/>
		<collection property="rt" resultMap="roomtype"/>
	</resultMap>
	
	<resultMap type="com.tech.gndo1.payment.dto.ReserveDto" id="reserve">
		<result property="rs_num" column="RS_NUM"/>
		<result property="mem_num" column="MEM_NUM"/>
		<result property="rt_num" column="RT_NUM"/>
		<result property="rs_start" column="RS_START"/>
		<result property="rs_end" column="RS_END"/>
		<result property="rs_people" column="RS_PEOPLE"/>
		<result property="rs_name" column="RS_NAME"/>
		<result property="rs_pnum" column="RS_PNUM"/>
		<collection property="pay" resultMap="payment"/>
		<collection property="acc" resultMap="accommodation_info"/>
		<collection property="rt" resultMap="roomtype"/>
	</resultMap>
	
	
	
	<!-- members 내가 쓴 리뷰 리스트 -->
	<select id="mem_reviews" resultType="com.tech.gndo1.review.dto.ReviewDto" resultMap="review">
		SELECT DISTINCT(RV.RV_NUM), ACC.ACC_NUM, ACC.ACC_NAME, RT.RT_RMNAME, RV.RV_TITLE, RV.RV_GRADE, RV.RV_DATE, RV.RV_CONTENT, RVI.RVI_AFTERIMG
		FROM REVIEW RV , REVIEW_IMG RVI, MEMBERS MEM, ROOMTYPE RT, ACCOMMODATION_INFO ACC
		WHERE  RV.MEM_NUM=MEM.MEM_NUM AND RV.RV_NUM=RVI.RV_NUM AND RT.RT_NUM=RV.RT_NUM AND ACC.ACC_NUM=RT.ACC_NUM
		AND MEM.MEM_NUM=#{param1}
		ORDER BY RV.RV_DATE
	</select>
	
	<!-- members 아직 쓰지 않은 결제 내역 -->
	<select id="have_to_write" resultType="com.tech.gndo1.payment.dto.ReserveDto" resultMap="reserve">
		SELECT ACC.ACC_NAME, RT.RT_RMNAME, RS.RS_END, RS.RS_START , RS.RS_NUM, ACC.ACC_NUM, RT.RT_NUM, PM.PM_NUM
		FROM ACCOMMODATION_INFO ACC, ROOMTYPE RT, RESERVE RS, MEMBERS MEM, PAYMENT PM
		WHERE ACC.ACC_NUM=RT.ACC_NUM AND RS.RT_NUM=RT.RT_NUM AND RS.MEM_NUM=MEM.MEM_NUM AND RS.RS_NUM=PM.RS_NUM
		AND NOT PM.PM_NUM IN(
			SELECT PM.PM_NUM FROM PAYMENT PM, REVIEW RV, PAY_CANCLE PC
			WHERE PM.PM_NUM=RV.PM_NUM OR PM.PM_NUM=PC.PM_NUM)
		AND MEM.MEM_NUM=#{param1}
		ORDER BY RS.RS_END
	</select>

</mapper>